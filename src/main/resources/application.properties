spring.jpa.database=postgresql
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://database-2.c7x4vvjc4sba.us-east-2.rds.amazonaws.com/mediapp
spring.datasource.url=jdbc:postgresql://localhost/mediapp
spring.datasource.username=postgres
#spring.datasource.password=12345678
spring.datasource.password=admin

#ACTIVA EL MECANISMO DE AUTENTICACION DE 0auth2
#INDICA EL ORDEN DE COMO LEVANTAR EL PROYECTO: 1- EL CORS 2- EL FILTRO DE SPRING SECURITY 3- oauth2
security.oauth2.resource.filter-order=3

#FIRMA PARA LA GENERACION DE TOKENS
#https://github.com/nydiarra/springboot-jwt
security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Spring Boot JWT

#INDICA COMO LA APLACION SE IDENTIFICA
security.jwt.client-id=mitomediapp
#INDICA UNA CLAVE POR DEFECTO A ESTA APLICACION
security.jwt.client-secret=mito89codex
#INDICARLE QUE EL MECANISMO DE OBTENCION DE LOGUES ES PARA OBTENER TOKENS
security.jwt.grant-type=password
#PERMITE A LOS TOKENS LEER O ESCRIBIR EN EL SERVIDOR DE RECURSOS
security.jwt.scope-read=read
security.jwt.scope-write=write
#ES COMO UN namespace QUE ENGLOBA TODA LA INFORMACION ANTERIOR
security.jwt.resource-ids=mitoresourceid